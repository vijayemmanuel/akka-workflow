######################################################
# Workflow cluster config
######################################################

akka {
     loglevel = DEBUG

    actor {
        provider = "cluster"
        serialization-bindings {
              "com.avs.workflow.bootstrap.CborSerializable" = jackson-cbor
            }
    }
    # For the sample, just bind to loopback and do not allow access from the network
    # the port is overridden by the logic in main class
    remote.artery {
        canonical.port = 0
        canonical.hostname = 127.0.0.1
    }

    cluster {
        seed-nodes = [
            "akka://Workflow@127.0.0.1:2551",
            "akka://Workflow@127.0.0.1:2552"
        ]

        roles = [ "write-model","read-model"]
    }

    # Akka management
    management {
        http {
            hostname = "127.0.0.1"
            port = 8558
            route-providers-read-only = false
        }
    }

    # use Cassandra to store both snapshots and the events of the persistent actors
    persistence {
        journal.plugin = "akka.persistence.cassandra.journal"
        snapshot-store.plugin = "akka.persistence.cassandra.snapshot"
    }
}
# Configuration for akka-persistence-cassandra
akka.persistence.cassandra {
  events-by-tag {
    bucket-size = "Day"
    # for reduced latency
    eventual-consistency-delay = 200ms
    flush-interval = 50ms
    pubsub-notification = on
    first-time-bucket = "20200115T00:00"
  }

  query {
    refresh-interval = 2s
  }

  # don't use autocreate in production
  journal.keyspace-autocreate = true
  journal.tables-autocreate = true
  snapshot.keyspace-autocreate = true
  snapshot.tables-autocreate = true
}

datastax-java-driver {
  advanced.reconnect-on-init = true
}

//EventProcessor
event-processor {
  id = "EventProcessor"            // type name of sharded event processor
  keep-alive-interval = 2 seconds  // event-processors ping interval
  tag-prefix = "tag"               // even processor tag prefix
  parallelism = 4                  // number of event processors
}


workflow.askTimeout = 10 s